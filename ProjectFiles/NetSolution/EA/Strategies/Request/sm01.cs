// Copyright © 2022 Rockwell Automation, Inc.
// Generated on: 2/21/2023 9:18:02 AM
// Generated by: RA-INT\NHender
//

using Cca.Cgp.Core.Base;
using Cca.Cgp.Core.Base.Ia;
using Cca.Cgp.Core.Base.Interfaces;
using Cca.Cgp.Core.Base.RequestStrategies;

using UAManagedCore;

//using Serilog;

namespace NetZero.EA.Strategies.Request
{
    public class sm01 : StartMonitorRequestStrategy
    {
        //private static readonly ILogger s_Log = Log.ForContext<sm01>();

        public sm01(IRequestHandler requestHandler)
            : base(requestHandler)
        {
            // change priority according to your needs
            Priority = 1;
        }

        /// <summary>
        /// handles an individual request
        /// </summary>
        /// <param name="request"><see cref="DataItemRequest"/> to process</param>
        public override void HandleMessage(DataItemRequest request)
        {
            Log.Debug(nameof(sm01), $"HandleMessage: {request.id}");
            base.HandleMessage(request);
        }

        ///// <summary>
        ///// accepts all incoming messages that are handled
        ///// by this strategy, and then passes them
        ///// one-by-one to the HandleMessage method
        ///// </summary>
        ///// <param name="requests"><see cref="IEnumerable{DataItemRequest}"/> to check</param>
        //public override void HandleMessages(IEnumerable<DataItemRequest> requests)
        //{
        //    // if group response processing is required, it can be done here
        //    // below is the base class implementation
        //    //foreach (var request in requests)
        //    //{
        //    //    HandleMessage(request);
        //    //}
        //    // use default handling
        //    base.HandleMessages(requests);
        //}

        /// <summary>
        /// determines if this strategy should handled a given
        /// request based on the properties of the request object
        /// </summary>
        /// <param name="request"><see cref="DataItemRequest"/> to check</param>
        /// <returns>True if this strategy handles this request</returns>
        public override bool Handles(DataItemRequest request)
        {
            // we should return true if this strategy handles this request
            var handles = request.actionType.Equals(ActionType.StartMonitor);
            Log.Debug(nameof(sm01), $"Handles: {handles}: {request.id}: {request.actionType}");
            return handles;
        }
    }
}
